from Charm/models_charm/dark_silicon_symmetric import perf2area_45nm, perf2power_45nm

typedef I+ : int i
    i > 0

typedef R+ : float r
    r > 0

typedef Fraction : float f
    f >= 0
    f <= 1

define core_area_scale:
    ref_core_area : R+ as a1
    core_area : R+ as a2
    ref_tech_node : I+ as t1
    tech_node : I+ as t2
    a1 / (t1 ** 2) = a2 / (t2 ** 2) 

define perf_scale:
    ref_core_performance : I+ as perf
    core_performance : R+ as new_perf
    tech_node : I+ as t
    perf_scale_factor : R+ as a
    a = Piecewise((1., t=45), (1.09, t=32), (2.38, t=22), (3.21, t=16), (4.17, t=11), (3.85, t=8))
    new_perf = a * perf

define power_scale:
    ref_core_power : R+ as power
    core_power : R+ as new_power
    power_scale_factor : R+ as a
    tech_node : I+ as t
    a = Piecewise((1., t=45), (0.66, t=32), (0.54, t=22), (0.38, t=16), (0.25, t=11), (0.12, t=8))
    new_power = a * power

define amdahl_law:
    speedup : R+ as sp
    serial_execution_time : R+ as st
    parallel_execution_time : R+ as pt
    sp = 1 / (st + pt)

define dynamic_cmp:
    core_performance.big : R+ as big_P
    core_performance.small : R+ as small_P
    fraction_parallelism : Fraction as F
    chip_area : R+ as A
    core_area.big : R+ as big_a
    core_area.small : R+ as small_a
    thermal_design_power : R+ as TDP
    core_power.big : R+ as big_p
    core_power.small : R+ as small_p
    core_num : I+ as N
    serial_execution_time : R+ as st
    parallel_execution_time : R+ as pt
    st = (1 - F)/big_P
    pt = F / (small_P * N)
    N = umin(ufloor((A - big_a)/small_a), ufloor((TDP - big_p)/small_p))
    big_P >= small_P

define dark_silicon_ratio:
    core_num : I+ as N
    core_area.small : R+ as a
    core_area.big : R+ as ba
    chip_area : R+ as A
    dark_ratio : Fraction as D
    D = 1 - (ba + N * a) / A

given amdahl_law, dark_silicon_ratio, dynamic_cmp, perf2area_45nm, perf2power_45nm, perf_scale, power_scale, core_area_scale
assume chip_area = 111.0
assume thermal_design_power = 125.0
assume ref_tech_node = 45
assume fraction_parallelism = [1., 0.999, 0.99,0.97, 0.95,  0.9, 0.8, 0.5, 0.]
assume ref_core_performance.big = range(1, 50, 1)
assume ref_core_performance.small = range(1, 50, 1)
assume tech_node = [45, 32, 22, 16, 11, 8]
explore speedup, dark_ratio, core_num