# Ref: https://dl.acm.org/citation.cfm?id=2000108

typedef I+ : int i
    i > 0

typedef R+ : float r
    r > 0

typedef Fraction : float f
    f >= 0
    f <= 1

define core_area_scale:
    ref_core_area : R+ as a1
    ref_tech_node : I+ as t1
    tech_node : I+ as t2
    core_area : R+ as a2
    a1 / (t1 ** 2) = a2 / (t2 ** 2) 

define perf_scale:
    ref_core_performance : I+ as perf
    core_performance : R+ as new_perf
    perf_scale_factor : R+ as a
    new_perf = a * perf

define power_scale:
    ref_core_power : R+ as power
    core_power : R+ as new_power
    power_scale_factor : R+ as a
    new_power = a * power

define perf2area_45nm:
    ref_core_performance : I+ as perf
    ref_core_area : R+ as a
    a = 0.0152 * perf ** 2 + 0.0265 * perf + 7.4393

define perf2power_45nm:
    ref_core_performance : I+ as perf
    ref_core_power : R+ as power
    power = 0.0002 * perf ** 3 + 0.0009 * perf ** 2 + 0.3859 * perf - 0.0301

define amdahl_law:
    speedup : R+ as sp
    serial_execution_time : R+ as st
    parallel_execution_time : R+ as pt
    sp = 1 / (st + pt)

define symm_cmp:
    core_performance : R+ as P
    fraction_parallelism : Fraction as F
    chip_area : R+ as A
    core_area : R+ as a
    thermal_design_power : R+ as TDP
    core_power : R+ as p
    core_num : I+ as N
    serial_execution_time : R+ as st
    parallel_execution_time : R+ as pt
    st = (1 - F)/P
    pt = F/(P * N)
    N = umin(ufloor(A / a), ufloor(TDP / p))

define dark_silicon_ratio:
    core_num : I+ as N
    core_area : R+ as a
    chip_area : R+ as A
    dark_ratio : Fraction as D
    D = 1 - N * a / A

given amdahl_law, dark_silicon_ratio, symm_cmp, perf2area_45nm, perf2power_45nm, perf_scale, power_scale, core_area_scale
assume chip_area = 111.0
assume thermal_design_power = 125.0
assume ref_tech_node = 45
#assume ref_core_performance = range(1, 50, 1)
assume ref_core_performance = 36
#assume fraction_parallelism = [1., 0.999, 0.99, 0.97, 0.95, 0.9, 0.8, 0.5, 0.]
assume fraction_parallelism = [0.999, 0.99, 0.9, 0.5]
#assume (tech_node, perf_scale_factor, power_scale_factor) = [(45, 1., 1.), (32, Gauss(1.095, 0.005, 1), Gauss(.685, 0.025, 0)), (22, Gauss(1.785, 0.595, 1), Gauss(.53, .01, 0)), (16, Gauss(2.23, 0.98, 1), Gauss(0.385, 0.005, 0)), (11, Gauss(2.735, 1.435, 1), Gauss(0.27, 0.02, 0)), (8, Gauss(2.595, 1.255, 1), Gauss(0.17, 0.05, 0))]
assume (tech_node, perf_scale_factor, power_scale_factor) = [(45, 1., 1.), (32, 1.09, .66), (22, 2.38, .54), (16, 3.21, .38), (11, 4.17, .25), (8, 3.85, .12)]
#assume (tech_node, perf_scale_factor, power_scale_factor) = [(45, 1., 1.), (32, 1.1, .71), (22, 1.19, .52), (16, 1.25, .39), (11, 1.3, .29), (8, 1.34, .22)]
#assume (tech_node, perf_scale_factor, power_scale_factor) = (45, 1., 1.)
explore speedup, dark_ratio, core_num
